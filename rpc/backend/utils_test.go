package backend

import (
	"fmt"

	"github.com/tendermint/tendermint/proto/tendermint/crypto"
)

func mookProofs(num int, withData bool) *crypto.ProofOps {
	var proofOps *crypto.ProofOps
	if num > 0 {
		proofOps = &crypto.ProofOps{
			Ops: make([]crypto.ProofOp, num),
		}
		for i := 0; i < num; i++ {
			proof := crypto.ProofOp{}
			if withData {
				proof.Data = []byte("ops:<type:\"ics23:iavl\" key:\"\\001\\177\\r\\025\\307\\372\\256e\\211fH\\310';m~C\\365\\217\\250B\" data:\"\\022\\314\\021\\n\\025\\001\\177\\r\\025\\307\\372\\256e\\211fH\\310';m~C\\365\\217\\250B\\022\\332\\010\\n\\025\\001\\177\\r\\021X\\232W\\326\\274\\014\\250fl*w\\003\\230k\\235Rq\\022\\233\\001\\n\\036/ethermint.types.v1.EthAccount\\022y\\n3\\n+tcrc10ux3zky62lttcr9gvekz5acrnp4e65n3qw284f\\030\\260\\312\\036 '\\022B0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\\032\\016\\010\\001\\030\\001 \\001*\\006\\000\\002\\262\\324\\376\\001\\\".\\010\\001\\022\\007\\002\\004\\262\\324\\376\\001 \\032! )a\\251\\226S\\263\\216:\\370\\321l\\2402$\\246\\034\\314\\350\\265\\0170\\3500V\\004\\252\\320IT\\324j\\236\\\",\\010\\001\\022(\\004\\006\\262\\324\\376\\001 \\002\\201%9o\\237\\275\\204\\035f-\\204\\003|\\245\\t\\010\\203M\\233U~5\\303\\\"u\\310\\006\\232(Q\\211 \\\",\\010\\001\\022(\\006\\n\\262\\324\\376\\001 \\304-!\\322/\\241\\314\\025\\340b\\272V\\252\\347\\224\\200\\313\\345\\021(\\270\\202\\3072u\\034\\271Om\\005\\003\\037 \\\",\\010\\001\\022(\\n\\034\\300\\336\\222\\004 \\250\\217\\216_\\227\\274\\271\\336\\210\\343\\277o\\025\\301\\037-\\310\\207d\\363\\361L\\253\\357\\2075Yag8\\335\\242 \\\".\\010\\001\\022\\007\\014H\\300\\336\\222\\004 \\032! \\214?\\016\\2351|\\265Z\\347\\275\\245\\210Gm\\3161\\n\\220\\316\\243:b\\227\\350\\026\\306n\\020\\356n\\243\\300\\\"-\\010\\001\\022)\\016\\226\\001\\300\\336\\222\\004 \\322$OZ\\002\\255$j<\\031\\323\\357\\177\\366\\362%\\275Wk\\001\\355@\\312\\003&^f65I\\251g \\\"/\\010\\001\\022\\010\\022\\334\\002\\310\\230\\322\\005 \\032! G\\001\\373 RM\\212e(\\357\\223W;\\202\\270\\377\\336\\r\\022;J\\034!\\324\\352\\027\\302|\\022d\\366u\\\"/\\010\\001\\022\\010\\024\\306\\004\\310\\230\\322\\005 \\032! \\347\\260\\0323]\\031C\\023\\243\\361\\357\\355'g\\206\\227\\250\\261v\\347\\363\\341\\202h\\021Y\\2032v\\357`\\233\\\"/\\010\\001\\022\\010\\026\\226\\010\\310\\230\\322\\005 \\032! \\017\\342U\\306Z\\245\\nA\\262w\\205R\\320l\\251gw<X\\203x}\\236?4\\210Z\\324d\\342\\236\\310\\\"-\\010\\001\\022)\\030\\364\\024\\310\\230\\322\\005 q\\203V\\221\\0335\\351\\326\\020H\\351Q\\360\\344\\350\\\"\\350G\\037:\\034\\313\\335\\260zZM\\220\\211\\353\\355\\357 \\\"-\\010\\001\\022)\\032\\350&\\212\\321\\322\\005 U\\267\\016\\204\\032\\361+\\271\\\"\\245\\272N\\021\\377\\313%\\375C=\\306\\256\\367\\266\\005\\033r*a\\341\\375\\232\\014 \\\"/\\010\\001\\022\\010\\034\\240B\\212\\321\\322\\005 \\032! \\355!\\316\\022tW\\031c\\260\\263e2\\\"\\345i\\203\\227\\ryP^\\001[\\326\\027\\tuQ\\235\\370\\302v\\\"0\\010\\001\\022\\t\\036\\324\\205\\001\\346\\234\\323\\005 \\032! \\335B\\276M7\\3173\\3035V'\\033\\315\\244\\200\\330 \\237j\\314b\\253\\352\\246\\304^D\\325\\345\\350\\310[\\\".\\010\\001\\022* \\200\\204\\002\\350\\260\\323\\005 \\352\\300\\001*\\345\\245\\225\\253K#//\\244\\256\\253\\327t\\023\\246\\302O\\363c\\212W\\031\\032\\3467l\\214B \\\"0\\010\\001\\022\\t$\\216\\316\\004\\350\\260\\323\\005 \\032! \\3338:Q (\\210u\\332l>\\374\\222\\310d6\\205\\321\\000\\231O\\263\\367\\266n\\372\\311\\034B\\363X\\234\\\".\\010\\001\\022*&\\366\\305\\007\\350\\260\\323\\005 \\354\\373\\303\\317\\271\\\\\\367d\\252\\346D3\\205\\244\\221\\207\\363\\346\\326\\301\\202\\203/X\\321\\251\\022\\310\\277\\241\\0308 \\\"0\\010\\001\\022\\t*\\240\\276\\022\\356\\260\\323\\005 \\032! \\027\\355I\\365Cg\\243\\374VL\\350\\003\\033Rjt\\364\\231\\375\\311\\223\\005V\\225%\\262BOG\\315\\363\\034\\\"1\\010\\001\\022\\n.\\220\\203\\206\\001\\356\\260\\323\\005 \\032! I\\262\\237\\177\\320\\342\\211\\311\\273C\\314C\\350)\\356\\257Z\\266y\\377\\315\\226y\\302\\306E\\266\\021\\257q\\322\\300\\\"/\\010\\001\\022+0\\262\\336\\254\\001\\356\\260\\323\\005 \\207{;n\\317\\337}\\2446\\235\\030dz\\367\\373\\200\\021\\014\\276\\330g\\026\\330V7\\374WM\\221\\3142# \\032\\325\\010\\n\\025\\001\\177\\rp\\000\\330P~\\350(C\\220M\\251[#b\\262\\321\\341\\341\\022\\231\\001\\n\\036/ethermint.types.v1.EthAccount\\022w\\n1\\n+tcrc10uxhqqxc2plws2zrjpx6jkerv2edrc0p9fuumn\\030\\260\\355\\023\\022B0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\\032\\r\\010\\001\\030\\001 \\001*\\005\\000\\002\\334\\366\\026\\\",\\010\\001\\022(\\002\\004\\262\\324\\376\\001 c\\376\\000\\225\\204\\017t\\320'\\n\\345\\366:?v-\\273\\201\\215\\315%\\rV\\230-\\243+\\277\\315\\036\\272( \\\",\\010\\001\\022(\\004\\006\\262\\324\\376\\001 \\002\\201%9o\\237\\275\\204\\035f-\\204\\003|\\245\\t\\010\\203M\\233U~5\\303\\\"u\\310\\006\\232(Q\\211 \\\",\\010\\001\\022(\\006\\n\\262\\324\\376\\001 \\304-!\\322/\\241\\314\\025\\340b\\272V\\252\\347\\224\\200\\313\\345\\021(\\270\\202\\3072u\\034\\271Om\\005\\003\\037 \\\",\\010\\001\\022(\\n\\034\\300\\336\\222\\004 \\250\\217\\216_\\227\\274\\271\\336\\210\\343\\277o\\025\\301\\037-\\310\\207d\\363\\361L\\253\\357\\2075Yag8\\335\\242 \\\".\\010\\001\\022\\007\\014H\\300\\336\\222\\004 \\032! \\214?\\016\\2351|\\265Z\\347\\275\\245\\210Gm\\3161\\n\\220\\316\\243:b\\227\\350\\026\\306n\\020\\356n\\243\\300\\\"-\\010\\001\\022)\\016\\226\\001\\300\\336\\222\\004 \\322$OZ\\002\\255$j<\\031\\323\\357\\177\\366\\362%\\275Wk\\001\\355@\\312\\003&^f65I\\251g \\\"/\\010\\001\\022\\010\\022\\334\\002\\310\\230\\322\\005 \\032! G\\001\\373 RM\\212e(\\357\\223W;\\202\\270\\377\\336\\r\\022;J\\034!\\324\\352\\027\\302|\\022d\\366u\\\"/\\010\\001\\022\\010\\024\\306\\004\\310\\230\\322\\005 \\032! \\347\\260\\0323]\\031C\\023\\243\\361\\357\\355'g\\206\\227\\250\\261v\\347\\363\\341\\202h\\021Y\\2032v\\357`\\233\\\"/\\010\\001\\022\\010\\026\\226\\010\\310\\230\\322\\005 \\032! \\017\\342U\\306Z\\245\\nA\\262w\\205R\\320l\\251gw<X\\203x}\\236?4\\210Z\\324d\\342\\236\\310\\\"-\\010\\001\\022)\\030\\364\\024\\310\\230\\322\\005 q\\203V\\221\\0335\\351\\326\\020H\\351Q\\360\\344\\350\\\"\\350G\\037:\\034\\313\\335\\260zZM\\220\\211\\353\\355\\357 \\\"-\\010\\001\\022)\\032\\350&\\212\\321\\322\\005 U\\267\\016\\204\\032\\361+\\271\\\"\\245\\272N\\021\\377\\313%\\375C=\\306\\256\\367\\266\\005\\033r*a\\341\\375\\232\\014 \\\"/\\010\\001\\022\\010\\034\\240B\\212\\321\\322\\005 \\032! \\355!\\316\\022tW\\031c\\260\\263e2\\\"\\345i\\203\\227\\ryP^\\001[\\326\\027\\tuQ\\235\\370\\302v\\\"0\\010\\001\\022\\t\\036\\324\\205\\001\\346\\234\\323\\005 \\032! \\335B\\276M7\\3173\\3035V'\\033\\315\\244\\200\\330 \\237j\\314b\\253\\352\\246\\304^D\\325\\345\\350\\310[\\\".\\010\\001\\022* \\200\\204\\002\\350\\260\\323\\005 \\352\\300\\001*\\345\\245\\225\\253K#//\\244\\256\\253\\327t\\023\\246\\302O\\363c\\212W\\031\\032\\3467l\\214B \\\"0\\010\\001\\022\\t$\\216\\316\\004\\350\\260\\323\\005 \\032! \\3338:Q (\\210u\\332l>\\374\\222\\310d6\\205\\321\\000\\231O\\263\\367\\266n\\372\\311\\034B\\363X\\234\\\".\\010\\001\\022*&\\366\\305\\007\\350\\260\\323\\005 \\354\\373\\303\\317\\271\\\\\\367d\\252\\346D3\\205\\244\\221\\207\\363\\346\\326\\301\\202\\203/X\\321\\251\\022\\310\\277\\241\\0308 \\\"0\\010\\001\\022\\t*\\240\\276\\022\\356\\260\\323\\005 \\032! \\027\\355I\\365Cg\\243\\374VL\\350\\003\\033Rjt\\364\\231\\375\\311\\223\\005V\\225%\\262BOG\\315\\363\\034\\\"1\\010\\001\\022\\n.\\220\\203\\206\\001\\356\\260\\323\\005 \\032! I\\262\\237\\177\\320\\342\\211\\311\\273C\\314C\\350)\\356\\257Z\\266y\\377\\315\\226y\\302\\306E\\266\\021\\257q\\322\\300\\\"/\\010\\001\\022+0\\262\\336\\254\\001\\356\\260\\323\\005 \\207{;n\\317\\337}\\2446\\235\\030dz\\367\\373\\200\\021\\014\\276\\330g\\026\\330V7\\374WM\\221\\3142# \" > ops:<type:\"ics23:simple\" key:\"acc\" data:\"\\n\\377\\001\\n\\003acc\\022 m;l\\312\\275\\\"/\\357\\373X\\325!q\\303\\343\\030\\203\\\"\\362\\023\\032\\232\\260X@\\335[\\240\\033\\263\\036Z\\032\\t\\010\\001\\030\\001 \\001*\\001\\000\\\"'\\010\\001\\022\\001\\001\\032 /Yb=\\027y\\035\\3304\\206\\207\\334\\241\\366`0A\\307\\374Fo \\244\\311m\\331\\301\\\\\\202y\\235\\274\\\"'\\010\\001\\022\\001\\001\\032 R\\324\\007\\357<xv\\342\\3566\\344o\\370\\347\\230Hl\\036\\254\\337\\237\\323\\234ps07\\275\\320=\\313F\\\"'\\010\\001\\022\\001\\001\\032 A\\227u\\330\\035\\246\\221\\014\\n\\203\\300Nk\\004oyu\\3060\\240\\006\\305\\032n\\005\\207\\303>$z:\\320\\\"'\\010\\001\\022\\001\\001\\032 o6y\\231\\276\\307+\\030\\376w\\277\\006\\357\\205ya/\\262ne\\215\\030\\3439\\2032\\374\\221\\265W\\343\\274\\\"'\\010\\001\\022\\001\\001\\032 a#v\\026\\037zEh\\222\\324\\005o\\375\\324\\364B\\321\\341\\233\\027\\005nB\\354\\\\6lb\\257\\340\\344a\" > ")
			}
			proofOps.Ops[i] = proof
		}
	}
	return proofOps
}

func (suite *BackendTestSuite) TestGetHexProofs() {
	defaultRes := []string{""}
	testCases := []struct {
		name  string
		proof *crypto.ProofOps
		exp   []string
	}{
		{
			"no proof provided",
			mookProofs(0, false),
			defaultRes,
		},
		{
			"no proof data provided",
			mookProofs(1, false),
			defaultRes,
		},
		{
			"valid proof provided",
			mookProofs(1, true),
			[]string{""},
		},
	}
	for _, tc := range testCases {
		suite.Run(fmt.Sprintf("Case %s", tc.name), func() {
			suite.Require().Equal(tc.exp, GetHexProofs(tc.proof))
		})
	}
}
