{
  "id": "0d7e53bb57cd39675d597b9295d3d9a5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/ChainID.sol": {
        "content": "pragma solidity >0.5.0;\n\ncontract TestChainID {\n    function currentChainID() public view returns (uint) {\n        uint id;\n        assembly {\n            id := chainid()\n        }\n        return id;\n    }\n}\n\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/ChainID.sol": {
        "TestChainID": {
          "abi": [
            {
              "inputs": [],
              "name": "currentChainID",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50607680601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b179e1e714602d575b600080fd5b4660405190815260200160405180910390f3fea26469706673582212200ab2fe344c609c675dfb009b4277fc1892ddd3c5247d73679f7b2d237318102d64736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x76 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB179E1E7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CHAINID PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xB2 INVALID CALLVALUE 0x4C PUSH1 0x9C PUSH8 0x5DFB009B4277FC18 SWAP3 0xDD 0xD3 0xC5 0x24 PUSH30 0x73679F7B2D237318102D64736F6C634300080A0033000000000000000000 ",
              "sourceMap": "25:182:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@currentChainID_13": {
                  "entryPoint": null,
                  "id": 13,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:193:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:1",
                            "type": ""
                          }
                        ],
                        "src": "14:177:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063b179e1e714602d575b600080fd5b4660405190815260200160405180910390f3fea26469706673582212200ab2fe344c609c675dfb009b4277fc1892ddd3c5247d73679f7b2d237318102d64736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB179E1E7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CHAINID PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xB2 INVALID CALLVALUE 0x4C PUSH1 0x9C PUSH8 0x5DFB009B4277FC18 SWAP3 0xDD 0xD3 0xC5 0x24 PUSH30 0x73679F7B2D237318102D64736F6C634300080A0033000000000000000000 ",
              "sourceMap": "25:182:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52:153;161:9;52:153;;160:25:1;;;148:2;133:18;52:153:0;;;;;;"
            },
            "methodIdentifiers": {
              "currentChainID()": "b179e1e7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"currentChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChainID.sol\":\"TestChainID\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ChainID.sol\":{\"keccak256\":\"0x7753c886817cbfa2580d61684e51eb04bfa7a3af80ff1b80a66fce671cc29fb9\",\"urls\":[\"bzz-raw://02b020736de6fef6c467fa99d7a12eaa511a14bea4240bc3796e9b1daf3e151e\",\"dweb:/ipfs/QmZKjNNqtdsNXg8dJoyg6w86rY9ogth8N23eJ6UQLJnp9r\"]}},\"version\":1}"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ChainID.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/ChainID.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/ChainID.sol": {
        "ast": {
          "absolutePath": "contracts/ChainID.sol",
          "exportedSymbols": {
            "TestChainID": [
              14
            ]
          },
          "id": 15,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TestChainID",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 14,
              "linearizedBaseContracts": [
                14
              ],
              "name": "TestChainID",
              "nameLocation": "34:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "105:100:0",
                    "statements": [
                      {
                        "assignments": [
                          7
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "120:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 12,
                            "src": "115:7:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "115:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "115:7:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "141:39:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "155:15:0",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "chainid",
                                  "nodeType": "YulIdentifier",
                                  "src": "161:7:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "161:9:0"
                              },
                              "variableNames": [
                                {
                                  "name": "id",
                                  "nodeType": "YulIdentifier",
                                  "src": "155:2:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 7,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "155:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 9,
                        "nodeType": "InlineAssembly",
                        "src": "132:48:0"
                      },
                      {
                        "expression": {
                          "id": 10,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "196:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5,
                        "id": 11,
                        "nodeType": "Return",
                        "src": "189:9:0"
                      }
                    ]
                  },
                  "functionSelector": "b179e1e7",
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentChainID",
                  "nameLocation": "61:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "75:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "99:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "99:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "98:6:0"
                  },
                  "scope": 14,
                  "src": "52:153:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 15,
              "src": "25:182:0",
              "usedErrors": []
            }
          ],
          "src": "0:209:0"
        },
        "id": 0
      }
    }
  }
}
