/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Greeter } from "../Greeter";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "ChangeGreeting",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040805180820190915260058082526448656c6c6f60d81b602090920191825261003d91600091610043565b50610117565b82805461004f906100dc565b90600052602060002090601f01602090048101928261007157600085556100b7565b82601f1061008a57805160ff19168380011785556100b7565b828001600101855582156100b7579182015b828111156100b757825182559160200191906001019061009c565b506100c39291506100c7565b5090565b5b808211156100c357600081556001016100c8565b600181811c908216806100f057607f821691505b6020821081141561011157634e487b7160e01b600052602260045260246000fd5b50919050565b610455806101266000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae32171461005b578063ef690cc014610079575b600080fd5b6100596100543660046102a0565b610081565b005b6100636100d1565b604051610070919061039e565b60405180910390f35b610063610163565b80516100949060009060208401906101f1565b507f61ae4cbae83f72235cd9fa781d18fcb08ff5fa4a44fcc1630fde673bb004115133826040516100c69291906103b8565b60405180910390a150565b6060600080546100e0906103e4565b80601f016020809104026020016040519081016040528092919081815260200182805461010c906103e4565b80156101595780601f1061012e57610100808354040283529160200191610159565b820191906000526020600020905b81548152906001019060200180831161013c57829003601f168201915b5050505050905090565b60008054610170906103e4565b80601f016020809104026020016040519081016040528092919081815260200182805461019c906103e4565b80156101e95780601f106101be576101008083540402835291602001916101e9565b820191906000526020600020905b8154815290600101906020018083116101cc57829003601f168201915b505050505081565b8280546101fd906103e4565b90600052602060002090601f01602090048101928261021f5760008555610265565b82601f1061023857805160ff1916838001178555610265565b82800160010185558215610265579182015b8281111561026557825182559160200191906001019061024a565b50610271929150610275565b5090565b5b808211156102715760008155600101610276565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102b257600080fd5b813567ffffffffffffffff808211156102ca57600080fd5b818401915084601f8301126102de57600080fd5b8135818111156102f0576102f061028a565b604051601f8201601f19908116603f011681019083821181831017156103185761031861028a565b8160405282815287602084870101111561033157600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156103775760208185018101518683018201520161035b565b81811115610389576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103b16020830184610351565b9392505050565b6001600160a01b03831681526040602082018190526000906103dc90830184610351565b949350505050565b600181811c908216806103f857607f821691505b6020821081141561041957634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212201f0cdfdc10e83dd131fa1aa2d744391c1fd193b75c0919d6225ca6f05251b2f664736f6c634300080a0033";
